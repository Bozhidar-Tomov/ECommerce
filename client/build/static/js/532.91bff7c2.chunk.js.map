{"version":3,"file":"static/js/532.91bff7c2.chunk.js","mappings":"sPA6GA,UA7FA,SAAgBA,GACd,IAAMC,EAAQC,eAAeC,QAAQ,SACrC,GAAwBC,EAAAA,EAAAA,UACtBC,KAAKC,MACHC,aAAaJ,QAAQ,WACjBI,aAAaJ,QAAQ,WACrBD,eAAeC,QAAQ,aAJ/B,eAAOK,EAAP,KAAaC,EAAb,KAOMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAmB,OAAJN,QAAI,IAAJA,GAAAA,EAAMO,OAAQC,EAAAA,EAAAA,GAAOR,EAAKO,OAAS,KAElDE,GAAUC,EAAAA,EAAAA,cAAY,WAC1BR,EAAS,CAAES,KAAMC,EAAAA,KAEjBX,EAAQ,QACP,CAACC,IAgBJ,OAdAW,EAAAA,EAAAA,YAAU,WACJP,GACqB,IAAnBA,EAAaQ,KAAa,IAAIC,MAAOC,WAAWP,IAEtDR,EACEJ,KAAKC,MACHC,aAAaJ,QAAQ,WACjBI,aAAaJ,QAAQ,WACrBD,eAAeC,QAAQ,eAI9B,QAACK,QAAD,IAACA,OAAD,EAACA,EAAMO,MAAOH,EAAUK,KAGzB,UAAC,IAAD,CAAQQ,GAAIxB,EAAOyB,QAASzB,EAAO0B,OAAO,KAAKC,UAAU,YAAzD,WACE,SAAC,UAAD,CAAcC,KAAK,IAAID,UAAU,kCAAjC,sCAGA,SAAC,WAAD,CAAe,gBAAc,kBAC7B,UAAC,aAAD,CAAiBE,GAAG,eAApB,WACE,UAAC,IAAD,CAAKF,UAAU,uBAAuBG,cAAY,EAAlD,WACE,SAAC,SAAD,CAAUC,GAAIC,EAAAA,GAAMC,GAAG,SAAvB,mBAGCpB,IACC,SAAC,SAAD,CAAUkB,GAAIC,EAAAA,GAAMC,GAAG,aAAvB,0BAKmB,UAAtBtB,EAASuB,WACPrB,GACC,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,KAAD,CACEsB,KAAMtB,EAAasB,KACnBC,OAAO,EACPC,IAAKxB,EAAayB,SAClBC,KAAK,QAEP,kBAAMZ,UAAU,OAAhB,cAAyBd,EAAasB,SACpCtB,EAAa2B,qBACb,SAAC,IAAD,CAAOC,MAAI,EAACd,UAAU,iBAAiBH,GAAG,UAA1C,2BAIF,SAAC,IAAD,CAAQO,GAAIC,EAAAA,GAAMC,GAAG,IAAIR,QAAQ,yBAAyBiB,QAAS1B,EAAnE,4BAMJ,SAAC,IAAD,WACE,SAAC,IAAD,CAAQe,GAAIC,EAAAA,GAAMC,GAAG,QAAQR,QAAQ,oBAArC,4BAMR,kBAAME,UAAU,YAAhB,WACE,kBACEe,QAAS3C,EAAM4C,aACfd,GAAG,YACHF,UAAU,SACVT,KAAK,WACL0B,KAAK,YAEP,gBAAKjB,UAAU","sources":["components/NavBar/NavBar.component.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actionType from \"../../constants/actionTypes\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport decode from \"jwt-decode\";\r\n\r\nfunction NavBar(props) {\r\n  const theme = sessionStorage.getItem(\"theme\");\r\n  const [user, setUser] = useState(\r\n    JSON.parse(\r\n      localStorage.getItem(\"profile\")\r\n        ? localStorage.getItem(\"profile\")\r\n        : sessionStorage.getItem(\"profile\")\r\n    )\r\n  );\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const decodedToken = user?.token ? decode(user.token) : null;\r\n\r\n  const signOut = useCallback(() => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    setUser(null);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (decodedToken) {\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) signOut();\r\n    }\r\n    setUser(\r\n      JSON.parse(\r\n        localStorage.getItem(\"profile\")\r\n          ? localStorage.getItem(\"profile\")\r\n          : sessionStorage.getItem(\"profile\")\r\n      )\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [user?.token, location, signOut]);\r\n\r\n  return (\r\n    <Navbar bg={theme} variant={theme} expand='md' className='pt-3 mx-5'>\r\n      <Navbar.Brand href='/' className='fw-bold fst-normal text-primary'>\r\n        Online Partner Retailer\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='navbarScroll' />\r\n      <Navbar.Collapse id='navbarScroll'>\r\n        <Nav className='me-auto my-2 my-lg-0' navbarScroll>\r\n          <Nav.Link as={Link} to='/store'>\r\n            Store\r\n          </Nav.Link>\r\n          {decodedToken && (\r\n            <Nav.Link as={Link} to='/dashboard'>\r\n              Dashboard\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n        {location.pathname !== \"/auth\" &&\r\n          (decodedToken ? (\r\n            <Nav>\r\n              <Container>\r\n                <Avatar\r\n                  name={decodedToken.name}\r\n                  round={true}\r\n                  src={decodedToken.imageUrl}\r\n                  size='36'\r\n                />\r\n                <span className='fs-6'> {decodedToken.name}</span>\r\n                {!decodedToken.isAccountValidated && (\r\n                  <Badge pill className='ms-3 text-dark' bg='warning'>\r\n                    Not verified\r\n                  </Badge>\r\n                )}\r\n                <Button as={Link} to='/' variant='outline-secondary ms-4' onClick={signOut}>\r\n                  Sign Out\r\n                </Button>\r\n              </Container>\r\n            </Nav>\r\n          ) : (\r\n            <Nav>\r\n              <Button as={Link} to='/auth' variant='outline-secondary'>\r\n                Sign In\r\n              </Button>\r\n            </Nav>\r\n          ))}\r\n      </Navbar.Collapse>\r\n      <form className='ms-4 form'>\r\n        <input\r\n          onClick={props.themeToggler}\r\n          id='dark-mode'\r\n          className='toggle'\r\n          type='checkbox'\r\n          role='switch'\r\n        />\r\n        <div className='curtain'></div>\r\n      </form>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"],"names":["props","theme","sessionStorage","getItem","useState","JSON","parse","localStorage","user","setUser","dispatch","useDispatch","location","useLocation","decodedToken","token","decode","signOut","useCallback","type","actionType","useEffect","exp","Date","getTime","bg","variant","expand","className","href","id","navbarScroll","as","Link","to","pathname","name","round","src","imageUrl","size","isAccountValidated","pill","onClick","themeToggler","role"],"sourceRoot":""}