{"version":3,"file":"static/js/354.ffdd1b3f.chunk.js","mappings":"4ZAEMA,E,MAAMC,GAAAA,OAAa,CAAEC,QAAS,0BAEpCF,EAAIG,aAAaC,QAAQC,KAAI,SAACC,GAM5B,OALIC,aAAaC,QAAQ,WACvBF,EAAIG,QAAQC,eAAZ,kBAAwCC,KAAKC,MAAML,aAAaC,QAAQ,YAAYK,OAC3EC,eAAeN,QAAQ,aAChCF,EAAIG,QAAQC,eAAZ,kBAAwCC,KAAKC,MAAME,eAAeN,QAAQ,YAAYK,QAEjFP,KAGF,IAAMS,EAAmB,eAACC,EAAD,uDAAa,GAAb,OAAoBhB,EAAIiB,IAAJ,mBAAoBD,KAE3DE,EAAS,SAACC,GAAD,OAAcnB,EAAIoB,KAAK,gBAAiBD,IACjDE,EAAS,SAACF,GAAD,OAAcnB,EAAIoB,KAAK,gBAAiBD,IAGjDG,EAAoB,SAACH,GAAD,OAAcnB,EAAIoB,KAAK,wBAAyBD,IAGpEI,EAAc,SAACV,GAAD,OAAWb,EAAIiB,IAAJ,0BAA2BJ,KACpDW,EAAwB,SAACC,GAAD,OACnCzB,EAAIoB,KAAK,+BAAgCK,IAE9BC,EAAgB,kBAAM1B,EAAIiB,IAAI,yBAC9BU,EAAyB,SAACC,GAAD,OAAU5B,EAAIoB,KAAK,gCAAiCQ,IAC7EC,EAAkB,SAACD,GAAD,OAAU5B,EAAIoB,KAAK,+BAAgCQ,IACrEE,EAAmB,SAACF,GAAD,OAAU5B,EAAIoB,KAAK,0BAA2BQ,IACjEG,EAAa,SAACC,GAAD,OAAUhC,EAAIiC,OAAO,oBAAqBD,IAEvDE,EAAW,SAACC,GAAD,OAAUnC,EAAIoB,KAAK,oCAAqCe,K,4WCoThF,MAhTA,WACEC,QAAQC,KAAK,UACb,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,UAASG,EAAAA,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQpC,eAAeN,QAAQ,SAC/B2C,EAA0B,SAAVD,EAAmB,QAAU,OACnD,GAAeV,EAAAA,EAAAA,UACb7B,KAAKC,MACHL,aAAaC,QAAQ,WACjBD,aAAaC,QAAQ,WACrBM,eAAeN,QAAQ,aAJxBwB,GAAP,eAOMoB,EAAmB,OAAJpB,QAAI,IAAJA,GAAAA,EAAMnB,OAAQwC,EAAAA,EAAAA,GAAOrB,EAAKnB,OAAS,KAhBrC,wCA+BnB,WAA0Be,GAA1B,iFACQ0B,EAAAA,GACoB,CACtB1B,KAAAA,EACA2B,MAAOX,IAAYD,EAAAA,GAAOA,EAAAA,GAAOC,IAAYY,EAAAA,GAAaA,EAAAA,GAAa,OAExEC,MAAK,WACJ,IAAIC,EAAI/C,KAAKC,MAAMD,KAAKgD,UAAUlB,IAClCiB,EAAEd,GAAWc,EAAEd,GAASgB,QAAO,SAACC,GAAD,OAAcA,EAASC,KAAOlC,KAE7Dc,EAAYgB,MAEbK,OAAM,SAACC,GAAD,OAAW5B,QAAQ4B,MAAM,QAASA,MAZ7C,4CA/BmB,uBAkBnBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FACQX,EAAAA,KAEHG,MAAK,SAACS,GACLxB,EAAYwB,EAAI/B,SAEjB4B,OAAM,SAACC,GAAD,OAAW5B,QAAQ4B,MAAM,QAASA,MAN7C,4CADc,uBAAC,WAAD,wBASdG,KACC,IACH/B,QAAQgC,IAAI3B,GAiBZ,IAAM4B,EAAU,SAACC,GAAD,OACd,2BACE,eAAIC,UAAU,YAAYC,QAAS,kBAAMxB,EAAS,YAAD,OAAasB,EAAMR,MAApE,SACGQ,EAAMG,QAET,eAAIF,UAAU,YAAYC,QAAS,kBAAMxB,EAAS,YAAD,OAAasB,EAAMR,MAApE,SACGQ,EAAMI,SAET,yBACE,SAACC,EAAA,EAAD,CAAQC,QAAQ,iBAAiBJ,QAAS,kBAvD7B,2CAuDmCK,CAAWP,EAAMR,KAAjE,SACGlB,IAAYD,EAAAA,IAAO,SAAC,MAAD,KAAe,SAAC,MAAD,YAY3C,OAAKF,GAGH,iCACE,SAACqC,EAAA,EAAD,CAAWP,UAAU,iBAArB,UACE,UAACQ,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,CAAKC,GAAI,EAAGV,UAAU,YAAtB,WACE,UAACQ,EAAA,EAAD,CAAKR,UAAU,qCAAf,WACE,cAAGA,UAAU,2BAAb,2BACA,2BACE,SAAC,KAAD,CACEE,KAAMrB,EAAaqB,KACnBS,OAAO,EACPC,IAAK/B,EAAagC,SAClBC,KAAK,WAGT,cAAGd,UAAU,YAAb,UACE,4BAASnB,EAAaqB,UAEtBhC,EAAShB,SAAS6D,qBAClB,SAACC,EAAA,EAAD,CACEC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,SAAS,SAACC,EAAA,EAAD,gCAHX,UAIE,SAACC,EAAA,EAAD,CACEC,MAAI,EACJxB,UAAU,gCACVyB,GAAG,UACHxB,QAAS,WACPlC,GACEd,EAAAA,EAAAA,IAAsB,CACpBiD,KAAMrB,EAAaqB,KACnBwB,MAAO7C,EAAa6C,MACpBC,OAAQ9C,EAAaU,KACpBL,KACD0C,IAAAA,KAAU,CACRC,UAAW,oCACXC,KAAK,kDAAD,OAAoDjD,EAAa6C,MAAjE,qCACJK,KAAM,UACNC,mBAAmB,EACnBC,WAAsB,SAAVtD,EAAmB,UAAY,UAC3CuD,MAAiB,UAAVvD,EAAoB,UAAY,eAjBjD,gCA2BN,mBACA,UAAC6B,EAAA,EAAD,CAAKR,UAAU,YAAf,WACE,sCACW,4BAAS9B,EAAShB,SAASiF,cAGtC,iBAAKnC,UAAU,iCAAf,WACE,4CACiB,4BAAS9B,EAAShB,SAASwE,WAF9C,QAKE,mBACEzB,SAAO,iBAAE,sGACwB2B,IAAAA,KAAU,CACvCQ,MAAO,oBACPH,WAAsB,SAAVtD,EAAmB,UAAY,UAC3CuD,MAAiB,UAAVvD,EAAoB,UAAY,UACvC0D,MAAO,QACPC,iBAAkB,2BAClBC,kBAAmB,WAPd,iBACQb,EADR,EACCc,QAUNZ,IAAAA,KAAA,yBAA4BF,IAXvB,2CAcT1B,UAAS,wCAAmCpB,GAf9C,wBAoBF,6CACkB,kCAAUV,EAAShB,SAASuF,oBAGhD,mBACA,SAACjC,EAAA,EAAD,WACE,mBACEP,QAAS,WACP2B,IAAAA,KAAU,CACRC,UAAW,gDACXC,KAAM,uKACNC,KAAM,UACNW,UAAW,UACXT,WAAsB,SAAVtD,EAAmB,UAAY,UAC3CuD,MAAiB,UAAVvD,EAAoB,UAAY,UACvCgE,mBAAmB,EACnBC,gBAAgB,EAChBC,kBAAkB,EAClBC,aAAa,EACbC,iBAAkB,SAClBR,kBAAmB,iBACnBS,mBAAoB,YACnB9D,KAdH,mCAcQ,WAAOtB,GAAP,qEACFA,EAAKqF,YADH,gCAEElE,EAAAA,KAEHG,MAAK,WACJnB,EAAS,CAAEmF,KAAMC,EAAAA,KACjBvB,IAAAA,KAAU,CACRC,UAAW,yCACXE,KAAM,UACNE,WAAsB,SAAVtD,EAAmB,UAAY,UAC3CuD,MAAiB,UAAVvD,EAAoB,UAAY,UACvCgE,mBAAmB,EACnBC,gBAAgB,EAChBZ,mBAAmB,EACnBoB,MAAO,OACNlE,KAAKT,EAAS,SAElBe,OAAM,SAACC,GAAD,OAAW5B,QAAQ4B,MAAMA,MAjB9B,2CAdR,wDAmCFO,UAAU,wCArCZ,kCA0CJ,UAACS,EAAA,EAAD,CAAKT,UAAU,cAAf,WACE,UAACqD,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAnC,WACE,UAACC,EAAA,cAAD,CAAkBxD,UAAU,QAA5B,WACE,SAACwD,EAAA,cAAD,CACEC,gBAAc,EACdxD,QAAS,kBAAM3B,EAAWF,EAAAA,KAC1B8B,KAAK,QACLgD,KAAK,WACP,iBACElD,UAAS,iBAAYrB,EAAZ,iBAA0BC,EAA1B,kFADX,WAEE,cAAGoB,UAAU,OAAb,+BACA,eAAIA,UAAU,oBAAd,SAAmC9B,EAASwF,KAAKC,gBAIrD,UAACH,EAAA,cAAD,CAAkBxD,UAAU,QAA5B,WACE,SAACwD,EAAA,cAAD,CACEvD,QAAS,kBAAM3B,EAAW,cAC1B4B,KAAK,QACLgD,KAAK,WACP,iBACElD,UAAS,iBAAYrB,EAAZ,iBAA0BC,EAA1B,iFADX,WAEE,cAAGoB,UAAU,OAAb,6BACA,eAAIA,UAAU,oBAAd,SAAmC9B,EAAS0F,UAAUD,gBAI1D,UAACH,EAAA,cAAD,CAAkBxD,UAAU,QAA5B,WACE,SAACwD,EAAA,cAAD,CAAkBtD,KAAK,QAAQgD,KAAK,WACpC,iBACElD,UAAS,iBAAYrB,EAAZ,iBAA0BC,EAA1B,iFADX,WAEE,cAAGoB,UAAU,OAAb,qBACA,eAAIA,UAAU,oBAAd,2BAKN,SAACQ,EAAA,EAAD,CACEqD,MAAO,CAAEC,UAAW,QACpB9D,UAAU,gDAFZ,UAGE,UAAC+D,EAAA,EAAD,CAAO1D,QAAS1B,EAAOqF,OAAK,EAAChE,UAAU,UAAvC,WACE,4BACE,2BACE,eAAI6D,MAAO,CAAEI,MAAO,OAApB,2BACA,eAAIJ,MAAO,CAAEI,MAAO,OAApB,oBACA,eAAIJ,MAAO,CAAEI,MAAO,OAApB,2BAGJ,2BAxLL/F,EAASG,GAAS6F,KAAI,SAACC,GAAD,OAC3B,SAACrE,EAAD,CAASI,KAAMiE,EAAQjE,KAAMC,MAAOgE,EAAQhE,MAAwBZ,GAAI4E,EAAQ5E,IAAxB4E,EAAQ5E,cA0LzDlB,IAAYD,EAAAA,IAAQF,EAASwF,KAAKC,OAAS,IAC1C,UAACnD,EAAA,EAAD,YACE,UAACJ,EAAA,EAAD,CACEgE,GAAIC,EAAAA,GACJC,GAAG,uCACHxD,KAAK,KACLT,QAAQ,UACRL,UAAU,OALZ,4BAMkB,SAAC,MAAD,CAAwBc,KAAM,GAAI+C,MAAO,CAAEC,WAAY,SAEzE,SAAC1D,EAAA,EAAD,CACEH,SAAO,iBAAE,qFACPzB,GAAa,GADN,SAEDO,EAAAA,KAEHG,MAAK,SAACqF,GACLC,OAAOC,SAAWF,EAAE3G,KACpBY,GAAa,MAEdgB,OAAM,SAACkF,GACN7G,QAAQgC,IAAI,SAAU6E,GACtBlG,GAAa,MAVV,2CAaTsC,KAAK,KACLT,QAAQ,UACRL,UAAU,OAhBZ,SAiBIzB,GAKA,UAAC,WAAD,YACE,SAACoG,EAAA,EAAD,CACEP,GAAG,OACHQ,UAAU,SACV9D,KAAK,KACL+D,KAAK,SACL,cAAY,UAEd,+CAZF,UAAC,WAAD,yBACc,SAAC,MAAD,CAAwB/D,KAAM,GAAI+C,MAAO,CAAEC,WAAY,sBAoBnF,SAAC,IAAD,QAvOkB,uC,uGC6BxB,MA1HA,WACE,OACE,oBAAQ9D,UAAU,uCAAlB,WACE,qBACEA,UAAU,wGADZ,WAOE,gBAAKA,UAAU,sCAAf,UACE,2EAEF,iBAAKA,UAAU,OAAf,WACE,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,OAEF,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,OAEF,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,OAEF,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,OAEF,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,OAEF,cAAG8E,KAAK,QAAQ9E,UAAU,kBAA1B,UACE,SAAC,MAAD,aAKN,oBAASA,UAAU,GAAnB,UACE,gBAAKA,UAAU,2CAAf,UACE,iBAAKA,UAAU,WAAf,WACE,iBAAKA,UAAU,0CAAf,WACE,eAAIA,UAAU,mCAAd,2BACA,4JAMF,iBAAKA,UAAU,0CAAf,WACE,eAAIA,UAAU,mCAAd,uBACA,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,wBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,sBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,oBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,2BAMJ,iBAAKA,UAAU,0CAAf,WACE,eAAIA,UAAU,mCAAd,2BACA,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,wBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,yBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,uBAIF,wBACE,cAAG8E,KAAK,KAAK9E,UAAU,aAAvB,wBAMJ,iBAAKA,UAAU,kDAAf,WACE,eAAIA,UAAU,mCAAd,sBACA,0BACE,cAAGA,UAAU,qBADf,8BAGA,0BACE,cAAGA,UAAU,yBADf,uBAIA,0BACE,cAAGA,UAAU,sBADf,uBAGA,0BACE,cAAGA,UAAU,sBADf,iCAQR,iBAAKA,UAAU,4BAAf,kCAEE,iBAAMA,UAAU,UAAhB","sources":["api/index.js","components/Dashboard/Dashboard.component.jsx","components/Footer/Footer.component.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000\" });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"profile\")) {\r\n    req.headers.authentication = `Bearer: ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\r\n  } else if (sessionStorage.getItem(\"profile\")) {\r\n    req.headers.authentication = `Bearer: ${JSON.parse(sessionStorage.getItem(\"profile\")).token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\nexport const fetchProductData = (productId = \"\") => API.get(`products/${productId}`);\r\n\r\nexport const signin = (formData) => API.post(\"/users/signin\", formData);\r\nexport const signup = (formData) => API.post(\"/users/signup\", formData);\r\n\r\nexport const addPromoCode = (formData) => API.post(\"/promo-codes/add\", formData);\r\nexport const validatePromoCode = (formData) => API.post(\"/promo-codes/validate\", formData);\r\nexport const deletePromoCode = (formData) => API.delete(\"/promo-codes/deletePromoCode\", formData);\r\n\r\nexport const verifyEmail = (token) => API.get(`/users/validate/${token}`);\r\nexport const sendVerificationEmail = (userInfo) =>\r\n  API.post(\"/users/sendVerificationEmail\", userInfo);\r\n\r\nexport const fetchUserData = () => API.get(\"/users/fetchUserData\");\r\nexport const removeItemFromUserData = (item) => API.post(\"/users/removeItemFromUserData\", item);\r\nexport const handleLikedList = (item) => API.post(\"/users/addProductToLikedList\", item);\r\nexport const addProductToCart = (item) => API.post(\"/users/addProductToCart\", item);\r\nexport const deleteUser = (user) => API.delete(\"/users/deleteUser\", user);\r\n\r\nexport const checkout = (data) => API.post(\"/payments/create-checkout-session\", data);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Stack from \"react-bootstrap/Stack\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Footer from \"../Footer/Footer.component\";\r\n\r\nimport { BsArrowRightCircleFill } from \"react-icons/bs\";\r\n\r\nimport { LOGOUT, LIKED_LIST, CART } from \"../../constants/actionTypes\";\r\n\r\nimport * as api from \"../../api\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport { RiDislikeLine } from \"react-icons/ri\";\r\nimport Avatar from \"react-avatar\";\r\nimport { sendVerificationEmail } from \"../../api\";\r\nimport decode from \"jwt-decode\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Dashboard() {\r\n  console.info(\"render\");\r\n  const dispatch = useDispatch();\r\n  const [userData, setUserData] = useState(null);\r\n  const [current, setCurrent] = useState(CART);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const theme = sessionStorage.getItem(\"theme\");\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n  const [user] = useState(\r\n    JSON.parse(\r\n      localStorage.getItem(\"profile\")\r\n        ? localStorage.getItem(\"profile\")\r\n        : sessionStorage.getItem(\"profile\")\r\n    )\r\n  );\r\n  const decodedToken = user?.token ? decode(user.token) : null;\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      await api\r\n        .fetchUserData()\r\n        .then((res) => {\r\n          setUserData(res.data);\r\n        })\r\n        .catch((error) => console.error(\"error\", error));\r\n    }\r\n    fetch();\r\n  }, []);\r\n  console.log(userData);\r\n\r\n  async function removeItem(item) {\r\n    await api\r\n      .removeItemFromUserData({\r\n        item,\r\n        field: current === CART ? CART : current === LIKED_LIST ? LIKED_LIST : null,\r\n      })\r\n      .then(() => {\r\n        let a = JSON.parse(JSON.stringify(userData));\r\n        a[current] = a[current].filter((itemList) => itemList.id !== item);\r\n\r\n        setUserData(a);\r\n      })\r\n      .catch((error) => console.error(\"error\", error));\r\n  }\r\n\r\n  const Product = (props) => (\r\n    <tr>\r\n      <td className='clickable' onClick={() => navigate(`/product/${props.id}`)}>\r\n        {props.name}\r\n      </td>\r\n      <td className='clickable' onClick={() => navigate(`/product/${props.id}`)}>\r\n        {props.price}\r\n      </td>\r\n      <td>\r\n        <Button variant='outline-danger' onClick={() => removeItem(props.id)}>\r\n          {current === CART ? <FiTrash2 /> : <RiDislikeLine />}\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  function productList() {\r\n    return userData[current].map((product) => (\r\n      <Product name={product.name} price={product.price} key={product.id} id={product.id} />\r\n    ));\r\n  }\r\n\r\n  if (!userData) return <div>loading</div>;\r\n\r\n  return (\r\n    <>\r\n      <Container className='mt-4 pb-5 pt-1'>\r\n        <Row>\r\n          <Col md={3} className='mt-2 mb-4'>\r\n            <Row className='justify-content-center text-center'>\r\n              <p className='fs-2 mt-2 mb-4 display-2'>Your Account</p>\r\n              <span>\r\n                <Avatar\r\n                  name={decodedToken.name}\r\n                  round={true}\r\n                  src={decodedToken.imageUrl}\r\n                  size='100'\r\n                />\r\n              </span>\r\n              <p className='fs-4 lead'>\r\n                <strong>{decodedToken.name}</strong>\r\n              </p>\r\n              {!userData.userInfo.isAccountValidated && (\r\n                <OverlayTrigger\r\n                  placement='right'\r\n                  delay={{ show: 150, hide: 200 }}\r\n                  overlay={<Tooltip>Click to activate</Tooltip>}>\r\n                  <Badge\r\n                    pill\r\n                    className='fs-6 text-dark w-50 clickable'\r\n                    bg='warning'\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        sendVerificationEmail({\r\n                          name: decodedToken.name,\r\n                          email: decodedToken.email,\r\n                          userID: decodedToken.id,\r\n                        }).then(\r\n                          Swal.fire({\r\n                            titleText: \"Confirmation email has been sent!\",\r\n                            html: `<p>If you can't see the email, sent to <strong>${decodedToken.email}</strong>, check spam folder.</p>`,\r\n                            icon: \"success\",\r\n                            showConfirmButton: true,\r\n                            background: theme === \"dark\" ? \"#303030\" : \"#fcfcfc\",\r\n                            color: theme === \"light\" ? \"#545454\" : \"#f3f3f3\",\r\n                          })\r\n                        )\r\n                      );\r\n                    }}>\r\n                    Not verified\r\n                  </Badge>\r\n                </OverlayTrigger>\r\n              )}\r\n            </Row>\r\n            <hr />\r\n            <Row className='fs-5 lead'>\r\n              <p>\r\n                Country: <strong>{userData.userInfo.country}</strong>\r\n              </p>\r\n\r\n              <div className='d-flex justify-content-between'>\r\n                <p>\r\n                  Email address: <strong>{userData.userInfo.email}</strong>\r\n                </p>\r\n                &nbsp;\r\n                <button\r\n                  onClick={async () => {\r\n                    const { value: email } = await Swal.fire({\r\n                      title: \"New Email Address\",\r\n                      background: theme === \"dark\" ? \"#303030\" : \"#fcfcfc\",\r\n                      color: theme === \"light\" ? \"#545454\" : \"#f3f3f3\",\r\n                      input: \"email\",\r\n                      inputPlaceholder: \"Enter your email address\",\r\n                      confirmButtonText: \"Update\",\r\n                    });\r\n\r\n                    if (email) {\r\n                      Swal.fire(`Entered email: ${email}`);\r\n                    }\r\n                  }}\r\n                  className={`fs-5 text-end switch-btn text-${oppositeTheme}`}>\r\n                  change\r\n                </button>\r\n              </div>\r\n\r\n              <p>\r\n                Account created:<strong> {userData.userInfo.createdAt}</strong>\r\n              </p>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n              <button\r\n                onClick={() => {\r\n                  Swal.fire({\r\n                    titleText: \"Are you sure you want to delete your account?\",\r\n                    html: \"<p>This process is irreversible. All of your data will be deleted from our servers according to <a href='/terms-of-service' target='_blank'>Terms of Service</a></p>\",\r\n                    icon: \"warning\",\r\n                    iconColor: \"#dc3545\",\r\n                    background: theme === \"dark\" ? \"#303030\" : \"#fcfcfc\",\r\n                    color: theme === \"light\" ? \"#545454\" : \"#f3f3f3\",\r\n                    allowOutsideClick: false,\r\n                    allowEscapeKey: false,\r\n                    showCancelButton: true,\r\n                    focusCancel: true,\r\n                    cancelButtonText: \"Cancel\",\r\n                    confirmButtonText: \"Yes, delete it\",\r\n                    confirmButtonColor: \"#dc3545\",\r\n                  }).then(async (data) => {\r\n                    if (data.isConfirmed) {\r\n                      await api\r\n                        .deleteUser()\r\n                        .then(() => {\r\n                          dispatch({ type: LOGOUT });\r\n                          Swal.fire({\r\n                            titleText: \"Your account was successfully deleted!\",\r\n                            icon: \"success\",\r\n                            background: theme === \"dark\" ? \"#272727\" : \"#fcfcfc\",\r\n                            color: theme === \"light\" ? \"#545454\" : \"#f3f3f3\",\r\n                            allowOutsideClick: false,\r\n                            allowEscapeKey: false,\r\n                            showConfirmButton: false,\r\n                            timer: 3050,\r\n                          }).then(navigate(\"/\"));\r\n                        })\r\n                        .catch((error) => console.error(error));\r\n                    }\r\n                  });\r\n                }}\r\n                className='fs-5 text-danger switch-btn clickable'>\r\n                Delete Account\r\n              </button>\r\n            </Row>\r\n          </Col>\r\n          <Col className='offset-md-2'>\r\n            <Stack direction='horizontal' gap={3}>\r\n              <Form.Check.Label className='w-100'>\r\n                <Form.Check.Input\r\n                  defaultChecked\r\n                  onClick={() => setCurrent(CART)}\r\n                  name='menus'\r\n                  type='radio'></Form.Check.Input>\r\n                <div\r\n                  className={`p-3 bg-${theme} text-${oppositeTheme} shadow-sm d-flex  justify-content-around align-items-center rounded clickable`}>\r\n                  <p className='fs-5'>Products in cart</p>\r\n                  <h3 className='fs-2 text-primary'>{userData.cart.length}</h3>\r\n                </div>\r\n              </Form.Check.Label>\r\n\r\n              <Form.Check.Label className='w-100'>\r\n                <Form.Check.Input\r\n                  onClick={() => setCurrent(\"likedList\")}\r\n                  name='menus'\r\n                  type='radio'></Form.Check.Input>\r\n                <div\r\n                  className={`p-3 bg-${theme} text-${oppositeTheme} shadow-sm d-flex justify-content-around align-items-center rounded clickable`}>\r\n                  <p className='fs-5'>Liked products</p>\r\n                  <h3 className='fs-2 text-primary'>{userData.likedList.length}</h3>\r\n                </div>\r\n              </Form.Check.Label>\r\n\r\n              <Form.Check.Label className='w-100'>\r\n                <Form.Check.Input name='menus' type='radio'></Form.Check.Input>\r\n                <div\r\n                  className={`p-3 bg-${theme} text-${oppositeTheme} shadow-sm d-flex justify-content-around align-items-center rounded clickable`}>\r\n                  <p className='fs-5'>Orders</p>\r\n                  <h3 className='fs-2 text-primary'>dev</h3>\r\n                </div>\r\n              </Form.Check.Label>\r\n            </Stack>\r\n\r\n            <Row\r\n              style={{ marginTop: \"10vh\" }}\r\n              className='rounded border border-primary border-2 shadow'>\r\n              <Table variant={theme} hover className='p-0 m-0'>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ width: \"40%\" }}>Product Name</th>\r\n                    <th style={{ width: \"20%\" }}>Price</th>\r\n                    <th style={{ width: \"20%\" }}>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{productList()}</tbody>\r\n              </Table>\r\n            </Row>\r\n            {current === CART && userData.cart.length > 0 && (\r\n              <Row>\r\n                <Button\r\n                  as={Link}\r\n                  to='../checkout/613e3e9bf52eba544e85c1cc'\r\n                  size='lg'\r\n                  variant='primary'\r\n                  className='mt-5'>\r\n                  Checkout &nbsp; <BsArrowRightCircleFill size={24} style={{ marginTop: -5 }} />\r\n                </Button>\r\n                <Button\r\n                  onClick={async () => {\r\n                    setIsLoading(true);\r\n                    await api\r\n                      .checkout()\r\n                      .then((e) => {\r\n                        window.location = e.data;\r\n                        setIsLoading(false);\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(\"error:\", err);\r\n                        setIsLoading(false);\r\n                      });\r\n                  }}\r\n                  size='lg'\r\n                  variant='primary'\r\n                  className='mt-5'>\r\n                  {!isLoading ? (\r\n                    <React.Fragment>\r\n                      test &nbsp; <BsArrowRightCircleFill size={24} style={{ marginTop: -5 }} />\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      <Spinner\r\n                        as='span'\r\n                        animation='border'\r\n                        size='sm'\r\n                        role='status'\r\n                        aria-hidden='true'\r\n                      />\r\n                      <span> Loading... </span>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Button>\r\n              </Row>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nimport { ImFacebook } from \"react-icons/im\";\r\nimport { ImTwitter } from \"react-icons/im\";\r\nimport { ImGoogle } from \"react-icons/im\";\r\nimport { FiInstagram } from \"react-icons/fi\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport { ImGithub } from \"react-icons/im\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='text-center text-lg-start text-muted'>\r\n      <section\r\n        className='\r\n          d-flex\r\n          justify-content-center justify-content-lg-between\r\n          p-3\r\n          border-bottom border-primary\r\n        '>\r\n        <div className='d-none d-lg-block text-primary fs-5'>\r\n          <span>Get connected with us on social networks:</span>\r\n        </div>\r\n        <div className='fs-5'>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <ImFacebook />\r\n          </a>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <ImTwitter />\r\n          </a>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <ImGoogle />\r\n          </a>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <FiInstagram />\r\n          </a>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <FaLinkedin />\r\n          </a>\r\n          <a href='#home' className='me-4 text-reset'>\r\n            <ImGithub />\r\n          </a>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=''>\r\n        <div className='container text-center text-md-start mt-3'>\r\n          <div className='row mt-3'>\r\n            <div className='col-md-3 col-lg-4 col-xl-3 mx-auto mb-4'>\r\n              <h2 className='text-uppercase fw-bold mb-4 fs-6'>Company name</h2>\r\n              <p>\r\n                Here you can use rows and columns to organize your footer content. Lorem ipsum dolor\r\n                sit amet, consectetur adipisicing elit.\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-2 col-lg-2 col-xl-2 mx-auto mb-2'>\r\n              <h2 className='text-uppercase fw-bold mb-4 fs-6'>Products</h2>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Angular\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  React\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Vue\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Laravel\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-3 col-lg-2 col-xl-2 mx-auto mb-2'>\r\n              <h2 className='text-uppercase fw-bold mb-4 fs-6'>Useful links</h2>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Pricing\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Settings\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Orders\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <a href='#!' className='text-reset'>\r\n                  Help\r\n                </a>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-2'>\r\n              <h2 className='text-uppercase fw-bold mb-4 fs-6'>Contact</h2>\r\n              <p>\r\n                <i className='fas fa-home me-3'></i> New York, NY 10012, US\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-envelope me-3'></i>\r\n                info@example.com\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-phone me-3'></i> + 01 234 567 88\r\n              </p>\r\n              <p>\r\n                <i className='fas fa-print me-3'></i> + 01 234 567 89\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='copyright text-center p-3'>\r\n        © 2021 Copyright:\r\n        <span className='fw-bold'> Bozhidar Tomov</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n"],"names":["API","axios","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authentication","JSON","parse","token","sessionStorage","fetchProductData","productId","get","signin","formData","post","signup","validatePromoCode","verifyEmail","sendVerificationEmail","userInfo","fetchUserData","removeItemFromUserData","item","handleLikedList","addProductToCart","deleteUser","user","delete","checkout","data","console","info","dispatch","useDispatch","useState","userData","setUserData","CART","current","setCurrent","isLoading","setIsLoading","navigate","useNavigate","theme","oppositeTheme","decodedToken","decode","api","field","LIKED_LIST","then","a","stringify","filter","itemList","id","catch","error","useEffect","res","fetch","log","Product","props","className","onClick","name","price","Button","variant","removeItem","Container","Row","Col","md","round","src","imageUrl","size","isAccountValidated","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","Badge","pill","bg","email","userID","Swal","titleText","html","icon","showConfirmButton","background","color","country","title","input","inputPlaceholder","confirmButtonText","value","createdAt","iconColor","allowOutsideClick","allowEscapeKey","showCancelButton","focusCancel","cancelButtonText","confirmButtonColor","isConfirmed","type","LOGOUT","timer","Stack","direction","gap","Form","defaultChecked","cart","length","likedList","style","marginTop","Table","hover","width","map","product","as","Link","to","e","window","location","err","Spinner","animation","role","href"],"sourceRoot":""}