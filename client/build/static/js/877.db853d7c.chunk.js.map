{"version":3,"file":"static/js/877.db853d7c.chunk.js","mappings":"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","sources":["actions/auth.js","api/index.js","images/auth-background.svg","components/Auth/Auth.component.jsx"],"sourcesContent":["import { AUTH, AUTH_ERROR, USER_INFORMATION } from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nexport const signin = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signin(formData);\r\n    dispatch({ type: AUTH, payload: data });\r\n    navigate(\"/store\");\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: error?.response?.data.message || \"Internal Server Error. Please try again later\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signup(formData);\r\n    dispatch({ type: USER_INFORMATION, payload: data });\r\n    navigate(\"./verify\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: error.response?.data.message || \"Internal Server Error. Please try again later\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const sendVerificationEmail = (userInfo) => async (dispatch) => {\r\n  try {\r\n    api.sendVerificationEmail(userInfo);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: error.response?.data.message || \"Internal Server Error. Please try again later\",\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000\" });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"profile\")) {\r\n    req.headers.authentication = `Bearer: ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\r\n  } else if (sessionStorage.getItem(\"profile\")) {\r\n    req.headers.authentication = `Bearer: ${JSON.parse(sessionStorage.getItem(\"profile\")).token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\nexport const fetchProductData = (productId = \"\") => API.get(`products/${productId}`);\r\n\r\nexport const signin = (formData) => API.post(\"/users/signin\", formData);\r\nexport const signup = (formData) => API.post(\"/users/signup\", formData);\r\n\r\nexport const addPromoCode = (formData) => API.post(\"/promo-codes/add\", formData);\r\nexport const validatePromoCode = (formData) => API.post(\"/promo-codes/validate\", formData);\r\nexport const deletePromoCode = (formData) => API.delete(\"/promo-codes/deletePromoCode\", formData);\r\n\r\nexport const verifyEmail = (token) => API.get(`/users/validate/${token}`);\r\nexport const sendVerificationEmail = (userInfo) =>\r\n  API.post(\"/users/sendVerificationEmail\", userInfo);\r\n\r\nexport const fetchUserData = () => API.get(\"/users/fetchUserData\");\r\nexport const removeItemFromUserData = (item) => API.post(\"/users/removeItemFromUserData\", item);\r\nexport const handleLikedList = (item) => API.post(\"/users/addProductToLikedList\", item);\r\nexport const addProductToCart = (item) => API.post(\"/users/addProductToCart\", item);\r\nexport const deleteUser = (user) => API.delete(\"/users/deleteUser\", user);\r\n\r\nexport const checkout = (data) => API.post(\"/payments/create-checkout-session\", data);\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAuthBackground(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 745,\n    height: 748,\n    viewBox: \"0 0 745 748\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.629 629.347L65.069 603.475C53.4379 598.546 41.538 594.276 29.426 590.687L28.598 602.711L25.24 589.464C10.219 585.17 0 583.281 0 583.281C0 583.281 13.8 635.77 42.754 675.898L76.488 681.824L50.281 685.603C53.9231 689.985 57.8371 694.134 62 698.025C104.115 737.117 151.024 755.053 166.773 738.085C182.522 721.117 161.148 675.673 119.033 636.585C105.977 624.466 89.576 614.741 73.158 607.085L71.629 629.347Z\",\n    fill: \"#C5C6DC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.015 601.245L141.773 575.707C134.365 565.475 126.386 555.669 117.873 546.336L110.949 556.201L114.921 543.125C104.28 531.689 96.509 524.79 96.509 524.79C96.509 524.79 81.194 576.857 85.234 626.174L111.049 648.684L86.657 638.372C87.5105 644.007 88.7175 649.583 90.271 655.066C106.117 710.3 137.002 749.901 159.254 743.517C181.506 737.133 186.7 687.182 170.854 631.948C165.942 614.825 156.928 598.022 146.831 582.983L134.015 601.245Z\",\n    fill: \"#D4D5E8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M519.751 176.983H515.659V64.883C515.659 56.3624 513.981 47.9253 510.72 40.0534C507.459 32.1814 502.68 25.0287 496.655 19.0038C490.63 12.9788 483.478 8.19959 475.606 4.93892C467.734 1.67824 459.297 0 450.776 0H213.269C196.061 0 179.558 6.83587 167.39 19.0038C155.222 31.1717 148.386 47.675 148.386 64.883V679.883C148.386 688.404 150.064 696.841 153.325 704.713C156.586 712.585 161.365 719.737 167.39 725.762C173.415 731.787 180.567 736.566 188.439 739.827C196.311 743.088 204.748 744.766 213.269 744.766H450.776C467.984 744.766 484.487 737.93 496.655 725.762C508.822 713.594 515.658 697.091 515.658 679.883V256.778H519.75L519.751 176.983Z\",\n    fill: \"#C5C6DC\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M453.394 16.874H422.394C423.82 20.3696 424.364 24.1622 423.979 27.9177C423.593 31.6731 422.29 35.2762 420.184 38.4094C418.078 41.5426 415.234 44.1098 411.902 45.8848C408.57 47.6598 404.853 48.5882 401.078 48.588H265.013C261.238 48.5878 257.521 47.6593 254.189 45.8841C250.858 44.109 248.014 41.5418 245.908 38.4086C243.802 35.2754 242.5 31.6725 242.114 27.9172C241.729 24.1619 242.273 20.3695 243.699 16.874H214.743C201.892 16.874 189.568 21.979 180.481 31.0659C171.394 40.1528 166.289 52.4772 166.289 65.328V679.435C166.289 692.286 171.394 704.61 180.481 713.697C189.568 722.784 201.892 727.889 214.743 727.889H453.394C466.245 727.889 478.569 722.784 487.656 713.697C496.743 704.61 501.848 692.286 501.848 679.435V679.435V65.327C501.848 52.4764 496.743 40.1522 487.656 31.0655C478.569 21.9788 466.245 16.874 453.394 16.874V16.874Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M303.658 261.503C303.657 257.21 304.787 252.993 306.934 249.276C309.081 245.559 312.169 242.473 315.888 240.329C312.171 238.182 307.955 237.052 303.663 237.052C299.37 237.051 295.154 238.18 291.436 240.326C287.719 242.472 284.632 245.559 282.486 249.276C280.34 252.993 279.21 257.209 279.21 261.502C279.21 265.794 280.34 270.01 282.486 273.727C284.632 277.444 287.719 280.531 291.436 282.677C295.154 284.823 299.37 285.952 303.663 285.952C307.955 285.951 312.171 284.821 315.888 282.674C312.17 280.53 309.081 277.445 306.935 273.728C304.788 270.012 303.657 265.795 303.658 261.503V261.503Z\",\n    fill: \"#CCCCCC\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M334.395 261.503C334.394 257.21 335.524 252.993 337.671 249.276C339.818 245.559 342.906 242.473 346.625 240.329C342.908 238.182 338.692 237.052 334.4 237.052C330.107 237.051 325.891 238.18 322.173 240.326C318.456 242.472 315.369 245.559 313.223 249.276C311.077 252.993 309.947 257.209 309.947 261.502C309.947 265.794 311.077 270.01 313.223 273.727C315.369 277.444 318.456 280.531 322.173 282.677C325.891 284.823 330.107 285.952 334.4 285.952C338.692 285.951 342.908 284.821 346.625 282.674C342.907 280.53 339.818 277.445 337.672 273.728C335.525 270.012 334.394 265.795 334.395 261.503V261.503Z\",\n    fill: \"#CCCCCC\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M364.434 285.952C377.937 285.952 388.884 275.005 388.884 261.502C388.884 247.999 377.937 237.052 364.434 237.052C350.931 237.052 339.984 247.999 339.984 261.502C339.984 275.005 350.931 285.952 364.434 285.952Z\",\n    fill: \"#6C63FF\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M405.296 337.869H262.796C261.439 337.867 260.139 337.328 259.18 336.369C258.22 335.409 257.681 334.109 257.679 332.752V190.252C257.681 188.895 258.22 187.595 259.18 186.635C260.139 185.676 261.439 185.137 262.796 185.135H405.296C406.653 185.137 407.953 185.676 408.913 186.635C409.872 187.595 410.411 188.895 410.413 190.252V332.752C410.411 334.109 409.872 335.409 408.913 336.369C407.953 337.328 406.653 337.867 405.296 337.869V337.869ZM262.796 187.183C261.982 187.184 261.202 187.508 260.626 188.083C260.051 188.659 259.727 189.439 259.726 190.253V332.753C259.727 333.567 260.051 334.347 260.626 334.923C261.202 335.499 261.982 335.822 262.796 335.823H405.296C406.11 335.822 406.89 335.499 407.466 334.923C408.042 334.347 408.365 333.567 408.366 332.753V190.253C408.365 189.439 408.042 188.659 407.466 188.083C406.89 187.508 406.11 187.184 405.296 187.183H262.796Z\",\n    fill: \"#CCCCCC\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M437.114 447.102H218.562V449.149H437.114V447.102Z\",\n    fill: \"#CCCCCC\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.464 434.322C229.276 434.322 232.366 431.232 232.366 427.42C232.366 423.608 229.276 420.518 225.464 420.518C221.652 420.518 218.562 423.608 218.562 427.42C218.562 431.232 221.652 434.322 225.464 434.322Z\",\n    fill: \"#6C63FF\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M437.114 516.118H218.562V518.165H437.114V516.118Z\",\n    fill: \"#CCCCCC\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.464 503.339C229.276 503.339 232.366 500.249 232.366 496.437C232.366 492.625 229.276 489.535 225.464 489.535C221.652 489.535 218.562 492.625 218.562 496.437C218.562 500.249 221.652 503.339 225.464 503.339Z\",\n    fill: \"#6C63FF\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433.114 594.71H364.046C362.853 594.709 361.709 594.235 360.866 593.391C360.022 592.547 359.547 591.403 359.546 590.21V566.002C359.547 564.809 360.022 563.665 360.866 562.822C361.709 561.978 362.853 561.504 364.046 561.502H433.114C434.308 561.504 435.451 561.978 436.295 562.822C437.139 563.665 437.613 564.809 437.614 566.002V590.21C437.613 591.403 437.139 592.547 436.295 593.391C435.451 594.235 434.308 594.709 433.114 594.71V594.71Z\",\n    fill: \"#6C63FF\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.978 434.322C251.79 434.322 254.88 431.232 254.88 427.42C254.88 423.608 251.79 420.518 247.978 420.518C244.166 420.518 241.076 423.608 241.076 427.42C241.076 431.232 244.166 434.322 247.978 434.322Z\",\n    fill: \"#6C63FF\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M270.492 434.322C274.304 434.322 277.394 431.232 277.394 427.42C277.394 423.608 274.304 420.518 270.492 420.518C266.68 420.518 263.59 423.608 263.59 427.42C263.59 431.232 266.68 434.322 270.492 434.322Z\",\n    fill: \"#6C63FF\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.978 503.339C251.79 503.339 254.88 500.249 254.88 496.437C254.88 492.625 251.79 489.535 247.978 489.535C244.166 489.535 241.076 492.625 241.076 496.437C241.076 500.249 244.166 503.339 247.978 503.339Z\",\n    fill: \"#6C63FF\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M270.492 503.339C274.304 503.339 277.394 500.249 277.394 496.437C277.394 492.625 274.304 489.535 270.492 489.535C266.68 489.535 263.59 492.625 263.59 496.437C263.59 500.249 266.68 503.339 270.492 503.339Z\",\n    fill: \"#6C63FF\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M564.677 489.461C565.167 489.686 565.639 489.949 566.087 490.249L610.94 471.106L612.541 459.29L630.462 459.181L629.403 486.279L570.204 501.935C570.079 502.346 569.93 502.75 569.756 503.143C568.9 504.969 567.524 506.502 565.8 507.549C564.075 508.595 562.08 509.109 560.065 509.026C558.05 508.942 556.104 508.265 554.473 507.08C552.841 505.894 551.596 504.253 550.894 502.362C550.192 500.471 550.064 498.415 550.527 496.452C550.99 494.489 552.022 492.706 553.495 491.328C554.967 489.95 556.814 489.037 558.804 488.705C560.793 488.373 562.836 488.636 564.677 489.461V489.461Z\",\n    fill: \"#FFB8B8\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M636.98 735.021H624.72L618.888 687.733L636.982 687.734L636.98 735.021Z\",\n    fill: \"#FFB8B8\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M615.963 731.518H639.607V746.405H601.076C601.076 742.456 602.644 738.67 605.436 735.878C608.228 733.086 612.015 731.518 615.963 731.518Z\",\n    fill: \"#2F2E41\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M684.66 731.557L672.459 732.759L662.018 686.271L680.025 684.497L684.66 731.557Z\",\n    fill: \"#FFB8B8\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M663.401 730.131L686.931 727.813L688.391 742.629L650.045 746.406C649.854 744.46 650.047 742.496 650.615 740.625C651.182 738.754 652.113 737.013 653.353 735.502C654.593 733.991 656.119 732.739 657.843 731.817C659.567 730.896 661.456 730.323 663.401 730.131Z\",\n    fill: \"#2F2E41\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M640.393 409.135C653.957 409.135 664.954 398.138 664.954 384.574C664.954 371.009 653.957 360.013 640.393 360.013C626.828 360.013 615.831 371.009 615.831 384.574C615.831 398.138 626.828 409.135 640.393 409.135Z\",\n    fill: \"#FFB8B8\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M621.98 725.458C620.927 725.461 619.906 725.091 619.098 724.415C618.291 723.738 617.748 722.798 617.565 721.761C611.22 686.535 590.477 571.355 589.981 568.165C589.97 568.092 589.965 568.018 589.966 567.943V559.355C589.965 559.043 590.063 558.738 590.245 558.483L592.985 554.645C593.115 554.461 593.286 554.309 593.484 554.2C593.683 554.092 593.903 554.03 594.129 554.02C609.751 553.288 660.913 551.142 663.385 554.23C665.867 557.333 664.99 566.736 664.789 568.59L664.799 568.783L687.784 715.778C687.964 716.951 687.675 718.147 686.98 719.108C686.285 720.069 685.239 720.717 684.069 720.913L669.713 723.278C668.644 723.45 667.548 723.232 666.626 722.665C665.704 722.097 665.016 721.217 664.687 720.186C660.247 705.997 645.358 658.268 640.198 639.799C640.166 639.682 640.092 639.581 639.991 639.514C639.889 639.448 639.767 639.42 639.647 639.437C639.527 639.454 639.417 639.514 639.338 639.606C639.259 639.698 639.216 639.816 639.218 639.938C639.476 657.543 640.099 702.461 640.313 717.975L640.337 719.645C640.346 720.777 639.931 721.87 639.173 722.71C638.416 723.55 637.37 724.075 636.244 724.182L622.4 725.439C622.26 725.452 622.119 725.458 621.98 725.458Z\",\n    fill: \"#2F2E41\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M624.805 418.792C620.519 421.34 617.954 426.023 616.482 430.787C613.757 439.609 612.117 448.729 611.598 457.947L610.042 485.547L590.787 558.717C607.476 572.838 617.102 569.629 639.568 558.078C662.033 546.528 664.6 561.929 664.6 561.929L669.092 499.671L675.511 431.639C674.07 429.904 672.439 428.336 670.649 426.964C664.716 422.351 657.814 419.145 650.462 417.587C643.11 416.028 635.501 416.159 628.207 417.969L624.805 418.792Z\",\n    fill: \"#6C63FF\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M618.551 504.239C619.069 504.434 619.57 504.669 620.051 504.943L664.4 482.746L665.136 470.72L683.429 469.459L684.41 496.872L625.144 516.471C624.66 518.547 623.556 520.426 621.978 521.858C620.4 523.291 618.423 524.209 616.311 524.491C614.198 524.773 612.05 524.405 610.151 523.436C608.253 522.468 606.694 520.944 605.683 519.068C604.672 517.192 604.256 515.052 604.49 512.934C604.724 510.815 605.598 508.819 606.995 507.209C608.392 505.599 610.246 504.453 612.31 503.922C614.374 503.392 616.551 503.502 618.551 504.239Z\",\n    fill: \"#FFB8B8\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M675.19 431.95C686.101 435.801 688.023 477.524 688.023 477.524C675.186 470.463 659.782 482.017 659.782 482.017C659.782 482.017 656.573 471.105 652.721 456.985C651.558 453.013 651.419 448.811 652.317 444.771C653.215 440.731 655.12 436.984 657.856 433.878C657.856 433.878 664.278 428.097 675.19 431.95Z\",\n    fill: \"#7D75FF\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M662.415 391.069C659.355 388.621 655.18 393.071 655.18 393.071L652.732 371.037C652.732 371.037 637.431 372.87 627.638 370.426C617.846 367.981 616.316 379.301 616.316 379.301C615.811 374.728 615.708 370.12 616.01 365.53C616.621 360.021 624.578 354.513 638.655 350.841C652.732 347.168 660.076 363.082 660.076 363.082C669.869 367.977 665.475 393.517 662.415 391.069Z\",\n    fill: \"#2F2E41\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M387.469 580.949H383.873L383.189 583H381.009L384.714 573.047H386.614L390.34 583H388.159L387.469 580.949ZM384.427 579.288H386.915L385.664 575.562L384.427 579.288ZM398.68 573.047V579.603C398.68 580.692 398.338 581.553 397.654 582.187C396.975 582.82 396.046 583.137 394.865 583.137C393.703 583.137 392.78 582.829 392.097 582.214C391.413 581.599 391.064 580.753 391.051 579.678V573.047H393.102V579.616C393.102 580.268 393.257 580.744 393.566 581.045C393.881 581.341 394.314 581.489 394.865 581.489C396.018 581.489 396.604 580.883 396.622 579.671V573.047H398.68ZM407.854 574.708H404.805V583H402.754V574.708H399.746V573.047H407.854V574.708ZM417.13 583H415.079V578.734H411.08V583H409.029V573.047H411.08V577.08H415.079V573.047H417.13V583Z\",\n    fill: \"white\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.832 118.586C262.621 120.391 261.953 121.785 260.828 122.77C259.711 123.746 258.223 124.234 256.363 124.234C254.348 124.234 252.73 123.512 251.512 122.066C250.301 120.621 249.695 118.688 249.695 116.266V114.625C249.695 113.039 249.977 111.645 250.539 110.441C251.109 109.238 251.914 108.316 252.953 107.676C253.992 107.027 255.195 106.703 256.562 106.703C258.375 106.703 259.828 107.211 260.922 108.227C262.016 109.234 262.652 110.633 262.832 112.422H260.57C260.375 111.062 259.949 110.078 259.293 109.469C258.645 108.859 257.734 108.555 256.562 108.555C255.125 108.555 253.996 109.086 253.176 110.148C252.363 111.211 251.957 112.723 251.957 114.684V116.336C251.957 118.188 252.344 119.66 253.117 120.754C253.891 121.848 254.973 122.395 256.363 122.395C257.613 122.395 258.57 122.113 259.234 121.551C259.906 120.98 260.352 119.992 260.57 118.586H262.832ZM265 117.543C265 116.301 265.242 115.184 265.727 114.191C266.219 113.199 266.898 112.434 267.766 111.895C268.641 111.355 269.637 111.086 270.754 111.086C272.48 111.086 273.875 111.684 274.938 112.879C276.008 114.074 276.543 115.664 276.543 117.648V117.801C276.543 119.035 276.305 120.145 275.828 121.129C275.359 122.105 274.684 122.867 273.801 123.414C272.926 123.961 271.918 124.234 270.777 124.234C269.059 124.234 267.664 123.637 266.594 122.441C265.531 121.246 265 119.664 265 117.695V117.543ZM267.18 117.801C267.18 119.207 267.504 120.336 268.152 121.188C268.809 122.039 269.684 122.465 270.777 122.465C271.879 122.465 272.754 122.035 273.402 121.176C274.051 120.309 274.375 119.098 274.375 117.543C274.375 116.152 274.043 115.027 273.379 114.168C272.723 113.301 271.848 112.867 270.754 112.867C269.684 112.867 268.82 113.293 268.164 114.145C267.508 114.996 267.18 116.215 267.18 117.801ZM281.301 111.32L281.359 112.727C282.289 111.633 283.543 111.086 285.121 111.086C286.895 111.086 288.102 111.766 288.742 113.125C289.164 112.516 289.711 112.023 290.383 111.648C291.062 111.273 291.863 111.086 292.785 111.086C295.566 111.086 296.98 112.559 297.027 115.504V124H294.859V115.633C294.859 114.727 294.652 114.051 294.238 113.605C293.824 113.152 293.129 112.926 292.152 112.926C291.348 112.926 290.68 113.168 290.148 113.652C289.617 114.129 289.309 114.773 289.223 115.586V124H287.043V115.691C287.043 113.848 286.141 112.926 284.336 112.926C282.914 112.926 281.941 113.531 281.418 114.742V124H279.25V111.32H281.301ZM311.02 117.801C311.02 119.73 310.578 121.285 309.695 122.465C308.812 123.645 307.617 124.234 306.109 124.234C304.57 124.234 303.359 123.746 302.477 122.77V128.875H300.309V111.32H302.289L302.395 112.727C303.277 111.633 304.504 111.086 306.074 111.086C307.598 111.086 308.801 111.66 309.684 112.809C310.574 113.957 311.02 115.555 311.02 117.602V117.801ZM308.852 117.555C308.852 116.125 308.547 114.996 307.938 114.168C307.328 113.34 306.492 112.926 305.43 112.926C304.117 112.926 303.133 113.508 302.477 114.672V120.73C303.125 121.887 304.117 122.465 305.453 122.465C306.492 122.465 307.316 122.055 307.926 121.234C308.543 120.406 308.852 119.18 308.852 117.555ZM321.613 124C321.488 123.75 321.387 123.305 321.309 122.664C320.301 123.711 319.098 124.234 317.699 124.234C316.449 124.234 315.422 123.883 314.617 123.18C313.82 122.469 313.422 121.57 313.422 120.484C313.422 119.164 313.922 118.141 314.922 117.414C315.93 116.68 317.344 116.312 319.164 116.312H321.273V115.316C321.273 114.559 321.047 113.957 320.594 113.512C320.141 113.059 319.473 112.832 318.59 112.832C317.816 112.832 317.168 113.027 316.645 113.418C316.121 113.809 315.859 114.281 315.859 114.836H313.68C313.68 114.203 313.902 113.594 314.348 113.008C314.801 112.414 315.41 111.945 316.176 111.602C316.949 111.258 317.797 111.086 318.719 111.086C320.18 111.086 321.324 111.453 322.152 112.188C322.98 112.914 323.41 113.918 323.441 115.199V121.035C323.441 122.199 323.59 123.125 323.887 123.812V124H321.613ZM318.016 122.348C318.695 122.348 319.34 122.172 319.949 121.82C320.559 121.469 321 121.012 321.273 120.449V117.848H319.574C316.918 117.848 315.59 118.625 315.59 120.18C315.59 120.859 315.816 121.391 316.27 121.773C316.723 122.156 317.305 122.348 318.016 122.348ZM328.891 111.32L328.961 112.914C329.93 111.695 331.195 111.086 332.758 111.086C335.438 111.086 336.789 112.598 336.812 115.621V124H334.645V115.609C334.637 114.695 334.426 114.02 334.012 113.582C333.605 113.145 332.969 112.926 332.102 112.926C331.398 112.926 330.781 113.113 330.25 113.488C329.719 113.863 329.305 114.355 329.008 114.965V124H326.84V111.32H328.891ZM344.23 120.824L347.184 111.32H349.504L344.406 125.957C343.617 128.066 342.363 129.121 340.645 129.121L340.234 129.086L339.426 128.934V127.176L340.012 127.223C340.746 127.223 341.316 127.074 341.723 126.777C342.137 126.48 342.477 125.938 342.742 125.148L343.223 123.859L338.699 111.32H341.066L344.23 120.824ZM370.855 124H368.594L360.004 110.852V124H357.742V106.938H360.004L368.617 120.145V106.938H370.855V124ZM382.34 124C382.215 123.75 382.113 123.305 382.035 122.664C381.027 123.711 379.824 124.234 378.426 124.234C377.176 124.234 376.148 123.883 375.344 123.18C374.547 122.469 374.148 121.57 374.148 120.484C374.148 119.164 374.648 118.141 375.648 117.414C376.656 116.68 378.07 116.312 379.891 116.312H382V115.316C382 114.559 381.773 113.957 381.32 113.512C380.867 113.059 380.199 112.832 379.316 112.832C378.543 112.832 377.895 113.027 377.371 113.418C376.848 113.809 376.586 114.281 376.586 114.836H374.406C374.406 114.203 374.629 113.594 375.074 113.008C375.527 112.414 376.137 111.945 376.902 111.602C377.676 111.258 378.523 111.086 379.445 111.086C380.906 111.086 382.051 111.453 382.879 112.188C383.707 112.914 384.137 113.918 384.168 115.199V121.035C384.168 122.199 384.316 123.125 384.613 123.812V124H382.34ZM378.742 122.348C379.422 122.348 380.066 122.172 380.676 121.82C381.285 121.469 381.727 121.012 382 120.449V117.848H380.301C377.645 117.848 376.316 118.625 376.316 120.18C376.316 120.859 376.543 121.391 376.996 121.773C377.449 122.156 378.031 122.348 378.742 122.348ZM389.605 111.32L389.664 112.727C390.594 111.633 391.848 111.086 393.426 111.086C395.199 111.086 396.406 111.766 397.047 113.125C397.469 112.516 398.016 112.023 398.688 111.648C399.367 111.273 400.168 111.086 401.09 111.086C403.871 111.086 405.285 112.559 405.332 115.504V124H403.164V115.633C403.164 114.727 402.957 114.051 402.543 113.605C402.129 113.152 401.434 112.926 400.457 112.926C399.652 112.926 398.984 113.168 398.453 113.652C397.922 114.129 397.613 114.773 397.527 115.586V124H395.348V115.691C395.348 113.848 394.445 112.926 392.641 112.926C391.219 112.926 390.246 113.531 389.723 114.742V124H387.555V111.32H389.605ZM413.875 124.234C412.156 124.234 410.758 123.672 409.68 122.547C408.602 121.414 408.062 119.902 408.062 118.012V117.613C408.062 116.355 408.301 115.234 408.777 114.25C409.262 113.258 409.934 112.484 410.793 111.93C411.66 111.367 412.598 111.086 413.605 111.086C415.254 111.086 416.535 111.629 417.449 112.715C418.363 113.801 418.82 115.355 418.82 117.379V118.281H410.23C410.262 119.531 410.625 120.543 411.32 121.316C412.023 122.082 412.914 122.465 413.992 122.465C414.758 122.465 415.406 122.309 415.938 121.996C416.469 121.684 416.934 121.27 417.332 120.754L418.656 121.785C417.594 123.418 416 124.234 413.875 124.234ZM413.605 112.867C412.73 112.867 411.996 113.188 411.402 113.828C410.809 114.461 410.441 115.352 410.301 116.5H416.652V116.336C416.59 115.234 416.293 114.383 415.762 113.781C415.23 113.172 414.512 112.867 413.605 112.867Z\",\n    fill: \"#BDBFD7\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAuthBackground);\nexport default __webpack_public_path__ + \"static/media/auth-background.644170d59660de44cf23f5f8081a5a8b.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate, Navigate } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nimport { CLEAR_ERROR, EU } from \"../../constants/actionTypes\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport { BsPersonLinesFill } from \"react-icons/bs\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport { CgPassword } from \"react-icons/cg\";\r\nimport { BiShow } from \"react-icons/bi\";\r\nimport { BiHide } from \"react-icons/bi\";\r\nimport { ImGoogle } from \"react-icons/im\";\r\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport countries from \"countries-list\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup, signin } from \"../../actions/auth\";\r\n\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport background from \"../../images/auth-background.svg\";\r\n\r\nconst schemaSignUp = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .min(3, \"Must be at least 3 characters\")\r\n    .max(40, \"Must be 40 characters or less.\")\r\n    .required(),\r\n  lastName: yup\r\n    .string()\r\n    .min(3, \"Must be at least 3 characters\")\r\n    .max(40, \"Must be 40 characters or less.\")\r\n    .required(),\r\n  email: yup.string().email(\"Invalid email\").required(),\r\n  country: yup.string().required(\"Select your country from the list\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must be between 8 and 40 characters\")\r\n    .max(40, \"Password must be between 8 and 40 characters\")\r\n    .required(),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Password does not match\")\r\n    .required(),\r\n});\r\nconst schemaSignIn = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email\").required(),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must be between 8 and 40 characters\")\r\n    .max(40, \"Password must be between 8 and 40 characters\")\r\n    .required(),\r\n});\r\n\r\nfunction Auth() {\r\n  console.log(\"rendering\");\r\n  const user = JSON.parse(\r\n    localStorage.getItem(\"profile\")\r\n      ? localStorage.getItem(\"profile\")\r\n      : sessionStorage.getItem(\"profile\")\r\n  );\r\n  const theme = sessionStorage.getItem(\"theme\");\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n  const error = useSelector((state) => state.auth.errors);\r\n  useSelector((state) => console.log(\"state\", state));\r\n  const [isSignUp, setSignUp] = useState(false);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [userGeoId, setUserGeoId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const recaptchaRef = useRef();\r\n\r\n  useEffect(() => {\r\n    async function getLocation() {\r\n      if (!userGeoId) {\r\n        await fetch(\"https://ipapi.co/json/\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setUserGeoId({\r\n              countryCode: data.country_code,\r\n              countryName: data.country_name,\r\n              ip: data.ip,\r\n              internetProvider: data.org,\r\n              currency: data.currency,\r\n            });\r\n          });\r\n      }\r\n    }\r\n    getLocation();\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, [error]);\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res.profileObj;\r\n    const googleToken = res.tokenId;\r\n\r\n    const formData = {\r\n      firstName: result.givenName,\r\n      lastName: result.familyName,\r\n      email: result.email,\r\n      country: userGeoId.countryCode,\r\n      password: result.googleId,\r\n      confirmPassword: result.googleId,\r\n      rememberMe: false,\r\n    };\r\n\r\n    const recaptchaToken = await recaptchaRef.current.executeAsync();\r\n    recaptchaRef.current.reset();\r\n\r\n    if (isSignUp) {\r\n      dispatch(signup({ ...formData, recaptchaToken, googleToken, ip: userGeoId.ip }, navigate));\r\n    } else {\r\n      dispatch(signin({ ...formData, recaptchaToken, googleToken, ip: userGeoId.ip }, navigate));\r\n    }\r\n  };\r\n\r\n  const googleFailure = (err) => {\r\n    console.log(\"google unsuccessful\", err);\r\n  };\r\n\r\n  function getCountries() {\r\n    return Object.keys(countries?.countries).map((code) => {\r\n      const country = countries?.countries[code].name;\r\n      if (countries.countries[code].continent === EU) {\r\n        return (\r\n          <option key={country} value={country}>\r\n            {country}\r\n          </option>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  if (user) {\r\n    return <Navigate to='/' />;\r\n  }\r\n\r\n  if (!userGeoId) return null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Alert\r\n        role='alert'\r\n        variant={`${theme === \"dark\" ? \"dark\" : \"danger\"}`}\r\n        className='alert_ fs-5 d-flex align-items-center justify-content-center'\r\n        show={error}\r\n        dismissible\r\n        onClose={() => dispatch({ type: CLEAR_ERROR, payload: null })}>\r\n        <span>\r\n          <AiOutlineExclamationCircle size='30' />\r\n          &nbsp;&nbsp;&nbsp;{error}\r\n        </span>\r\n      </Alert>\r\n\r\n      <ReCAPTCHA\r\n        sitekey={process.env.REACT_APP_SITE_KEY}\r\n        size='invisible'\r\n        badge='bottomright'\r\n        ref={recaptchaRef}\r\n        theme={theme}\r\n      />\r\n\r\n      <div className='my-5 mx-md-5 p-2 d-flex justify-content-md-start justify-content-center align-items-center'>\r\n        <Card\r\n          className='n shadow-lg border border-primary border-2'\r\n          bg={theme}\r\n          text={oppositeTheme}>\r\n          <Card.Title className='text-primary text-center my-4'>\r\n            <h3>{isSignUp ? \"Sign Up\" : \"Sign In\"}</h3>\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <Formik\r\n              validationSchema={isSignUp ? schemaSignUp : schemaSignIn}\r\n              onSubmit={async (formData) => {\r\n                console.log(formData);\r\n                const recaptchaToken = await recaptchaRef.current.executeAsync();\r\n                recaptchaRef.current.reset();\r\n\r\n                dispatch({ type: CLEAR_ERROR });\r\n                setIsLoading(true);\r\n\r\n                if (isSignUp) {\r\n                  dispatch(signup({ ...formData, recaptchaToken, ip: userGeoId.ip }, navigate));\r\n                } else {\r\n                  dispatch(signin({ ...formData, recaptchaToken, ip: userGeoId.ip }, navigate));\r\n                }\r\n              }}\r\n              initialValues={{\r\n                firstName: \"wee\",\r\n                lastName: \"wee\",\r\n                email: \"development.acc5@gmail.com\",\r\n                country: userGeoId.countryName,\r\n                countryCode: userGeoId.countryCode,\r\n                password: \"dg7ugyjyj6h\",\r\n                confirmPassword: \"dg7ugyjyj6h\",\r\n                rememberMe: false,\r\n                internetProvider: userGeoId.internetProvider,\r\n                currency: userGeoId.currency,\r\n              }}>\r\n              {({ handleSubmit, handleChange, handleReset, values, touched, errors }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Container fluid='md'>\r\n                    {isSignUp && (\r\n                      <>\r\n                        <p className='lead fs-2 '>Personal Info</p>\r\n                        <Form.Group as={Col} className='mb-3 ps-4'>\r\n                          <Form.Label>\r\n                            First Name <span className='text-danger'>*</span>\r\n                          </Form.Label>\r\n                          <InputGroup hasValidation className='mb-2'>\r\n                            <InputGroup.Text>\r\n                              <BsPersonLinesFill />\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              className={`bg-${theme} text-${oppositeTheme}`}\r\n                              name='firstName'\r\n                              type='text'\r\n                              value={values.firstName}\r\n                              onChange={handleChange}\r\n                              isInvalid={touched.lastName && !!errors.firstName}\r\n                              placeholder='John'\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.firstName}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className='mb-3 ps-4' controlId='last-name'>\r\n                          <Form.Label>\r\n                            Last Name <span className='text-danger '>*</span>\r\n                          </Form.Label>\r\n                          <InputGroup hasValidation className='mb-2'>\r\n                            <InputGroup.Text>\r\n                              <BsPersonLinesFill />\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              className={`bg-${theme} text-${oppositeTheme}`}\r\n                              name='lastName'\r\n                              type='text'\r\n                              value={values.lastName}\r\n                              onChange={handleChange}\r\n                              isInvalid={touched.lastName && !!errors.lastName}\r\n                              placeholder='Smith'\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.lastName}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                      </>\r\n                    )}\r\n\r\n                    {isSignUp && (\r\n                      <>\r\n                        <Form.Group as={Col} className='mb-3 ps-4' controlId='Country'>\r\n                          <Form.Label>\r\n                            Country <span className='text-danger '>*</span>\r\n                          </Form.Label>\r\n                          <InputGroup hasValidation className='mb-2 '>\r\n                            <InputGroup.Text>\r\n                              <FaMapMarkerAlt />\r\n                            </InputGroup.Text>\r\n                            <Form.Select\r\n                              name='country'\r\n                              className={`bg-${theme} text-${oppositeTheme}`}\r\n                              defaultValue={userGeoId.countryName}\r\n                              isInvalid={!!errors.country}\r\n                              onChange={handleChange}>\r\n                              {getCountries()}\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.country}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                        <hr className='mt-5' />\r\n                        <p className='lead fs-2 mb-3'>Account Info</p>\r\n                      </>\r\n                    )}\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      className={`mb-3 ${isSignUp ? \"ps-4\" : \"\"}`}\r\n                      controlId='email-address'>\r\n                      <Form.Label>\r\n                        Email <span className='text-danger '>*</span>\r\n                      </Form.Label>\r\n                      <InputGroup hasValidation className='mb-2'>\r\n                        <InputGroup.Text className='fw-bold'>@</InputGroup.Text>\r\n                        <Form.Control\r\n                          className={`bg-${theme} text-${oppositeTheme}`}\r\n                          name='email'\r\n                          type='email'\r\n                          value={values.email}\r\n                          onChange={handleChange}\r\n                          isInvalid={touched.email && !!errors.email}\r\n                          placeholder='JohnSmith@service.com'\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>{errors.email}</Form.Control.Feedback>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      className={`mb-3 ${isSignUp ? \"ps-4\" : \"\"}`}\r\n                      controlId='password'>\r\n                      <Form.Label>\r\n                        Password <span className='text-danger '>*</span>\r\n                      </Form.Label>\r\n                      <InputGroup hasValidation className='mb-2'>\r\n                        <InputGroup.Text>\r\n                          <CgPassword />\r\n                        </InputGroup.Text>\r\n                        <Form.Control\r\n                          className={`bg-${theme} text-${oppositeTheme}`}\r\n                          name='password'\r\n                          type='password'\r\n                          value={values.password}\r\n                          onChange={handleChange}\r\n                          isInvalid={touched.password && !!errors.password}\r\n                          placeholder='Password'\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                          {errors.password}\r\n                        </Form.Control.Feedback>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    {isSignUp && (\r\n                      <Form.Group as={Col} className='mb-3 ps-4' controlId='confirm-password'>\r\n                        <Form.Label>\r\n                          Confirm Password <span className='text-danger '>*</span>\r\n                        </Form.Label>\r\n                        <InputGroup hasValidation className='mb-2'>\r\n                          <InputGroup.Text>\r\n                            <CgPassword />\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            className={`bg-${theme} text-${oppositeTheme}`}\r\n                            name='confirmPassword'\r\n                            type={showPass ? \"text\" : \"password\"}\r\n                            value={values.confirmPassword}\r\n                            onChange={handleChange}\r\n                            isInvalid={touched.confirmPassword && !!errors.confirmPassword}\r\n                            placeholder=' Confirm Password'\r\n                          />\r\n                          <Button\r\n                            variant='outline-secondary'\r\n                            onClick={() => setShowPass((e) => !e)}>\r\n                            {showPass ? <BiHide /> : <BiShow />}\r\n                          </Button>\r\n                          <Form.Control.Feedback type='invalid'>\r\n                            {errors.confirmPassword}\r\n                          </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                    )}\r\n\r\n                    {!isSignUp && (\r\n                      <Row className=' mt-3'>\r\n                        <Col>\r\n                          <Form.Label hidden={true}>Remember me</Form.Label>\r\n                          <Form.Check\r\n                            name='rememberMe'\r\n                            className='m-2'\r\n                            type='checkbox'\r\n                            label='Remember me'\r\n                            onChange={handleChange}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    )}\r\n\r\n                    <hr className='my-5' />\r\n\r\n                    <Row className='mt-2'>\r\n                      <Button type='submit' disabled={isLoading}>\r\n                        {!isLoading ? (\r\n                          isSignUp ? (\r\n                            \"Sign Up\"\r\n                          ) : (\r\n                            \"Sign In\"\r\n                          )\r\n                        ) : (\r\n                          <React.Fragment>\r\n                            <Spinner\r\n                              as='span'\r\n                              animation='border'\r\n                              size='sm'\r\n                              role='status'\r\n                              aria-hidden='true'\r\n                            />\r\n                            <span> Loading... </span>\r\n                          </React.Fragment>\r\n                        )}\r\n                      </Button>\r\n                      <span className='fs-6 text-center'>OR</span>\r\n                      <GoogleLogin\r\n                        clientId={process.env.REACT_APP_GOOGLE_ID}\r\n                        render={(renderProps) => (\r\n                          <Button\r\n                            variant='outline-primary'\r\n                            className='my-2'\r\n                            onClick={renderProps.onClick}\r\n                            onClickCapture={() => {\r\n                              dispatch({ type: CLEAR_ERROR });\r\n                            }}\r\n                            disabled={renderProps.disabled || isLoading}>\r\n                            <ImGoogle />\r\n                            <span>{isSignUp ? \" Sign Up \" : \" Sign In \"}with Google</span>\r\n                          </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                      />\r\n                    </Row>\r\n                    <Row className='mt-2'>\r\n                      <button\r\n                        className='switch-btn w-100 my-2 text-muted text-end'\r\n                        type='button'\r\n                        onClick={() => {\r\n                          setSignUp((e) => !e);\r\n                          dispatch({ type: CLEAR_ERROR, payload: null });\r\n                          handleReset();\r\n                        }}>\r\n                        {isSignUp\r\n                          ? \"ALREADY HAVE AN ACCOUNT? SIGN IN\"\r\n                          : \"DON'T HAVE AN ACCOUNT? SIGN UP\"}\r\n                      </button>\r\n                    </Row>\r\n                  </Container>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n        </Card>\r\n        <img className='r' src={background} alt='background' aria-hidden='true' />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["signin","formData","navigate","dispatch","api","data","type","AUTH","payload","console","log","AUTH_ERROR","response","message","signup","USER_INFORMATION","sendVerificationEmail","userInfo","error","API","axios","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authentication","JSON","parse","token","sessionStorage","fetchProductData","productId","get","post","validatePromoCode","verifyEmail","fetchUserData","removeItemFromUserData","item","handleLikedList","addProductToCart","deleteUser","user","delete","checkout","schemaSignUp","yup","shape","firstName","min","max","required","lastName","email","country","password","confirmPassword","oneOf","schemaSignIn","theme","oppositeTheme","useSelector","state","auth","errors","useState","isSignUp","setSignUp","showPass","setShowPass","userGeoId","setUserGeoId","isLoading","setIsLoading","useDispatch","useNavigate","recaptchaRef","useRef","useEffect","fetch","then","json","countryCode","country_code","countryName","country_name","ip","internetProvider","org","currency","getLocation","googleSuccess","res","result","profileObj","googleToken","tokenId","givenName","familyName","googleId","rememberMe","current","executeAsync","recaptchaToken","reset","googleFailure","err","to","Alert","role","variant","className","show","dismissible","onClose","CLEAR_ERROR","size","sitekey","process","badge","ref","Card","bg","text","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","handleReset","values","touched","Form","noValidate","Container","fluid","as","Col","InputGroup","hasValidation","name","value","onChange","isInvalid","placeholder","controlId","defaultValue","Object","keys","countries","map","code","continent","EU","Button","onClick","e","Row","hidden","label","disabled","Spinner","animation","GoogleLogin","clientId","render","renderProps","onClickCapture","onSuccess","onFailure","cookiePolicy","src","background","alt"],"sourceRoot":""}