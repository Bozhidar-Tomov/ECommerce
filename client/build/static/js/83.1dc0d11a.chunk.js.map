{"version":3,"file":"static/js/83.1dc0d11a.chunk.js","mappings":"sKAuCA,UAZA,YAAuC,IAAbA,EAAY,EAAZA,SAClBC,GAAWC,EAAAA,EAAAA,MACXC,EArBgB,WACtB,IAAMC,EAAOC,KAAKC,MAChBC,aAAaC,QAAQ,WACjBD,aAAaC,QAAQ,WACrBC,eAAeD,QAAQ,YAG7B,UAAIJ,QAAJ,IAAIA,GAAAA,EAAMM,MAAO,CACf,IAAMC,GAAeC,EAAAA,EAAAA,GAAOR,EAAKM,OACjC,OAAuB,IAAnBC,EAAaE,KAAa,IAAIC,MAAOC,aAClCJ,EAAaK,oBAAmD,eAA7BC,OAAOC,SAASC,WAC/C,CAAC,yEAA0E,KAG/E,CAAC,2CAA4C,SAEtD,MAAO,CAAC,2CAA4C,SAKvCC,GAEb,OAAa,IAATjB,EACKH,GAEPC,EAAS,CAAEoB,KAAMC,EAAAA,GAAYC,QAASpB,EAAK,MACpC,SAAC,KAAD,CAAUqB,GAAIrB,EAAK,Q,oBC5B9B,SAASsB,EAAsBC,GAC3BC,KAAKD,QAAUA,EAGnBD,EAAsBG,UAAY,IAAIC,MACtCJ,EAAsBG,UAAUE,KAAO,wBA6BvC,MAAkC,oBAAXb,QACnBA,OAAOc,MACPd,OAAOc,KAAKC,KAAKf,SA7BrB,SAAkBgB,GACd,IAAIC,EAAMC,OAAOF,GAAOG,QAAQ,MAAO,IACvC,GAAIF,EAAIG,OAAS,GAAK,EAClB,MAAM,IAAIZ,EACN,qEAGR,IAEI,IAAYa,EAAIC,EAAZC,EAAK,EAAeC,EAAM,EAAGC,EAAS,GAEzCH,EAASL,EAAIS,OAAOF,MAEpBF,IACCD,EAAKE,EAAK,EAAS,GAALF,EAAUC,EAASA,EAG/BC,IAAO,GACVE,GAAUP,OAAOS,aAAa,IAAON,KAAS,EAAIE,EAAM,IACzD,EAGAD,EA/BI,oEA+BWM,QAAQN,GAE3B,OAAOG,GCxBI,WAASR,GACpB,IAAIQ,EAASR,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClD,OAAQM,EAAOL,OAAS,GACpB,KAAK,EACD,MACJ,KAAK,EACDK,GAAU,KACV,MACJ,KAAK,EACDA,GAAU,IACV,MACJ,QACI,KAAM,4BAGd,IACI,OA5BR,SAA0BR,GACtB,OAAOY,mBACHf,EAAKG,GAAKE,QAAQ,QAAQ,SAASW,EAAGC,GAClC,IAAIC,EAAOD,EAAEE,WAAW,GAAGC,SAAS,IAAIC,cAIxC,OAHIH,EAAKZ,OAAS,IACdY,EAAO,IAAMA,GAEV,IAAMA,MAPzB,CA4BgCP,GAC1B,MAAOW,GACL,OAAOtB,EAAKW,IC5Bb,SAASY,EAAkB5B,GAC9BC,KAAKD,QAAUA,EAGnB4B,EAAkB1B,UAAY,IAAIC,MAClCyB,EAAkB1B,UAAUE,KAAO,wBAEpB,SAASpB,EAAO6C,GAC3B,GAAqB,iBAAV7C,EACP,MAAM,IAAI4C,EAAkB,2BAIhC,IAAIE,GAAAA,KADJD,EAAUA,GAAW,IACHE,OAAkB,EAAI,EACxC,IACI,OAAOpD,KAAKC,MAAMoD,EAAkBhD,EAAMiD,MAAM,KAAKH,KACvD,MAAOI,GACL,MAAM,IAAIN,EAAkB,4BAA8BM,EAAElC","sources":["components/ProtectedRoute.component.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AUTH_ERROR } from \"../constants/actionTypes\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport decode from \"jwt-decode\";\r\n\r\nconst isAuthenticated = () => {\r\n  const user = JSON.parse(\r\n    localStorage.getItem(\"profile\")\r\n      ? localStorage.getItem(\"profile\")\r\n      : sessionStorage.getItem(\"profile\")\r\n  );\r\n\r\n  if (user?.token) {\r\n    const decodedToken = decode(user.token);\r\n    if (decodedToken.exp * 1000 > new Date().getTime()) {\r\n      if (!decodedToken.isAccountValidated && window.location.pathname !== \"/dashboard\")\r\n        return [\"Your account is not verified! Verify your account in order to proceed.\", \"/\"];\r\n      return true;\r\n    }\r\n    return [\"Your session has expired. Sign in again.\", \"/auth\"];\r\n  }\r\n  return [\"You have to sign in in order to proceed.\", \"/auth\"];\r\n};\r\n\r\nfunction ProtectedRoute({ children }) {\r\n  const dispatch = useDispatch();\r\n  const auth = isAuthenticated();\r\n\r\n  if (auth === true) {\r\n    return children;\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR, payload: auth[0] });\r\n    return <Navigate to={auth[1]} />;\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["children","dispatch","useDispatch","auth","user","JSON","parse","localStorage","getItem","sessionStorage","token","decodedToken","decode","exp","Date","getTime","isAccountValidated","window","location","pathname","isAuthenticated","type","AUTH_ERROR","payload","to","InvalidCharacterError","message","this","prototype","Error","name","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","options","pos","header","base64_url_decode","split","e"],"sourceRoot":""}